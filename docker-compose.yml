services:

  # validator-api service
  api:
    image: ignf/validator-api:master-dev
    build:
      context: .
      dockerfile: .docker/Dockerfile
      args:
        - http_proxy
        - https_proxy
    environment:
      - HTTP_PROXY=${HTTP_PROXY}
      - HTTPS_PROXY=${HTTPS_PROXY}
      # important for ogr2ogr...
      - http_proxy=${HTTP_PROXY}
      - https_proxy=${HTTPS_PROXY}
      - APP_ENV=${APP_ENV}
      - DB_CREATE=1
      - DB_UPGRADE=1
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - DATABASE_URL=postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@database:5432/validator_api?serverVersion=13&charset=utf8
      - S3_ENDPOINT=${S3_ENDPOINT}
      - S3_ACCESS_KEY=${S3_ACCESS_KEY}
      - S3_SECRET_KEY=${S3_SECRET_KEY}
      - S3_BUCKET=${S3_BUCKET}
    networks:
      - validator
    volumes:
      - api-data:/opt/validator-api/var/data
    ports:
      # local exposure when traefik is not available
      - "8000:8000"
    depends_on:
      - database
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.validator-api.rule=Host(`validator-api-v1.${HOST_HOSTNAME}`)"
      - "traefik.http.services.validator-api-service.loadbalancer.server.port=8000"
    restart: unless-stopped

  database:
    image: postgis/postgis:13-3.5-alpine
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    ports:
      - 5432:5432
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U validator"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - validator
    volumes:
      - db-data:/var/lib/postgresql/data/
    restart: unless-stopped

  #-----------------------------------------------------------------------
  # Process validations
  #-----------------------------------------------------------------------
  worker:
    image: ignf/validator-api:master-dev
    command: [".docker/application.sh","backend"]
    environment:
      - HTTP_PROXY=${HTTP_PROXY}
      - HTTPS_PROXY=${HTTPS_PROXY}
      # important for ogr2ogr...
      - http_proxy=${HTTP_PROXY}
      - https_proxy=${HTTPS_PROXY}
      - APP_ENV=${APP_ENV}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - DATABASE_URL=postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@database:5432/validator_api?serverVersion=15&charset=utf8
      - S3_ENDPOINT=${S3_ENDPOINT}
      - S3_ACCESS_KEY=${S3_ACCESS_KEY}
      - S3_SECRET_KEY=${S3_SECRET_KEY}
      - S3_BUCKET=${S3_BUCKET}
      # validator-cli.jar only
      - DB_URL=jdbc:postgresql://database:5432/validator_api
      - DB_USER=${POSTGRES_USER}
      - DB_PASSWORD=${POSTGRES_PASSWORD}
    networks:
      - validator
    volumes:
      - api-data:/opt/validator-api/var/data
    depends_on:
      - api
    restart: unless-stopped

networks:
  validator:

volumes:
  # validations files
  api-data:
  # postgresql files (docker volume create db-data)
  db-data:
