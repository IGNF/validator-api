version: "3"

services:

  # validator-api service
  api:
    image: ignf/validator-api:latest
    build:
      context: .
      dockerfile: .docker/Dockerfile
      args:
        - http_proxy
        - https_proxy
        - HTTP_PROXY
        - HTTPS_PROXY
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    networks:
      - validator
    volumes:
      - api-data:/opt/validator-api/var/data
    ports:
      # local exposure when traefik is not available
      - "127.0.0.1:8000:8000"
    depends_on:
      - database
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.validator-api.rule=Host(`validator-api-v1.${HOST_HOSTNAME}`)"
    restart: unless-stopped

  database:
    image: postgres:13
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    networks:
      - validator
    volumes:
      - db-data:/var/lib/postgresql/data/
    restart: unless-stopped

  #-----------------------------------------------------------------------
  # Process validations
  #-----------------------------------------------------------------------
  orchestrator:
    image: ignf/validator-api:latest
    command: .docker/application.sh backend
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    networks:
      - validator
    volumes:
      - api-data:/opt/validator-api/var/data
    depends_on:
      - api
    restart: unless-stopped

networks:
  validator:

volumes:
  # validations files
  api-data:
  # postgresql files
  db-data:
