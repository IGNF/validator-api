name: PHP CI

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

permissions:
  contents: read

jobs:
  build:

    strategy:
      matrix:
        php-version: [7.4,8.1]

    runs-on: ubuntu-latest

    # see https://docs.github.com/en/actions/using-containerized-services/creating-postgresql-service-containers
    services:
      postgres:
        image: postgres:14
        env:
          POSTGRES_PASSWORD: postgres
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

    steps:
    - uses: actions/checkout@v3

    - name: Install gdal, zip and unzip
      run: sudo apt-get install -y gdal-bin zip unzip

    - name: "Setup PHP ${{ matrix.php-version }}"
      uses: shivammathur/setup-php@v2
      with:
        php-version: ${{ matrix.php-version }}
        coverage: xdebug2
        #tools: php-cs-fixer, phpunit

    - name: Validate composer.json
      run: composer validate --strict

    - name: Cache Composer packages
      id: composer-cache
      uses: actions/cache@v3
      with:
        path: vendor
        key: "php-${{ matrix.php-version }}-composer-${{ hashFiles('composer.lock') }}"
        restore-keys: "php-${{ matrix.php-version }}-composer-"

    - name: Install dependencies
      run: composer install --prefer-dist --no-progress

    - name: Run tests
      run: make test
      env:
        DATABASE_URL: postgresql://postgres:postgres@localhost:5432/validator_api?serverVersion=14&charset=utf8

